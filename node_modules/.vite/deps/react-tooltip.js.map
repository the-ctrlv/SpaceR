{
  "version": 3,
  "sources": ["../../classnames/index.js", "../../react-tooltip/node_modules/style-inject/dist/style-inject.es.js", "../../react-tooltip/src/utils/debounce.ts", "../../react-tooltip/src/components/TooltipProvider/TooltipProvider.tsx", "../../react-tooltip/src/components/TooltipProvider/TooltipWrapper.tsx", "../../react-tooltip/src/utils/use-isomorphic-layout-effect.ts", "../../react-tooltip/src/utils/compute-positions.ts", "../../react-tooltip/src/components/Tooltip/Tooltip.tsx", "../../react-tooltip/src/components/TooltipContent/TooltipContent.tsx", "../../react-tooltip/src/components/TooltipController/TooltipController.tsx"],
  "sourcesContent": ["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n", "function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * This function debounce the received function\n * @param { function } \tfunc\t\t\t\tFunction to be debounced\n * @param { number } \t\twait\t\t\t\tTime to wait before execut the function\n * @param { boolean } \timmediate\t\tParam to define if the function will be executed immediately\n */\nconst debounce = (func: (...args: any[]) => void, wait?: number, immediate?: true) => {\n  let timeout: NodeJS.Timeout | null = null\n\n  return function debounced(this: typeof func, ...args: any[]) {\n    const later = () => {\n      timeout = null\n      if (!immediate) {\n        func.apply(this, args)\n      }\n    }\n\n    if (immediate && !timeout) {\n      /**\n       * there's not need to clear the timeout\n       * since we expect it to resolve and set `timeout = null`\n       */\n      func.apply(this, args)\n      timeout = setTimeout(later, wait)\n    }\n\n    if (!immediate) {\n      if (timeout) {\n        clearTimeout(timeout)\n      }\n      timeout = setTimeout(later, wait)\n    }\n  }\n}\n\nexport default debounce\n", "import React, {\n  createContext,\n  PropsWithChildren,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from 'react'\n\nimport type {\n  AnchorRef,\n  TooltipContextData,\n  TooltipContextDataWrapper,\n} from './TooltipProviderTypes'\n\nconst DEFAULT_TOOLTIP_ID = 'DEFAULT_TOOLTIP_ID'\nconst DEFAULT_CONTEXT_DATA: TooltipContextData = {\n  anchorRefs: new Set(),\n  activeAnchor: { current: null },\n  attach: () => {\n    /* attach anchor element */\n  },\n  detach: () => {\n    /* detach anchor element */\n  },\n  setActiveAnchor: () => {\n    /* set active anchor */\n  },\n}\n\nconst DEFAULT_CONTEXT_DATA_WRAPPER: TooltipContextDataWrapper = {\n  getTooltipData: () => DEFAULT_CONTEXT_DATA,\n}\n\nconst TooltipContext = createContext<TooltipContextDataWrapper>(DEFAULT_CONTEXT_DATA_WRAPPER)\n\n/**\n * @deprecated Use the `data-tooltip-id` attribute, or the `anchorSelect` prop instead.\n * See https://react-tooltip.com/docs/getting-started\n */\nconst TooltipProvider: React.FC<PropsWithChildren<void>> = ({ children }) => {\n  const [anchorRefMap, setAnchorRefMap] = useState<Record<string, Set<AnchorRef>>>({\n    [DEFAULT_TOOLTIP_ID]: new Set(),\n  })\n  const [activeAnchorMap, setActiveAnchorMap] = useState<Record<string, AnchorRef>>({\n    [DEFAULT_TOOLTIP_ID]: { current: null },\n  })\n\n  const attach = (tooltipId: string, ...refs: AnchorRef[]) => {\n    setAnchorRefMap((oldMap) => {\n      const tooltipRefs = oldMap[tooltipId] ?? new Set()\n      refs.forEach((ref) => tooltipRefs.add(ref))\n      // create new object to trigger re-render\n      return { ...oldMap, [tooltipId]: new Set(tooltipRefs) }\n    })\n  }\n\n  const detach = (tooltipId: string, ...refs: AnchorRef[]) => {\n    setAnchorRefMap((oldMap) => {\n      const tooltipRefs = oldMap[tooltipId]\n      if (!tooltipRefs) {\n        // tooltip not found\n        // maybe thow error?\n        return oldMap\n      }\n      refs.forEach((ref) => tooltipRefs.delete(ref))\n      // create new object to trigger re-render\n      return { ...oldMap }\n    })\n  }\n\n  const setActiveAnchor = (tooltipId: string, ref: React.RefObject<HTMLElement>) => {\n    setActiveAnchorMap((oldMap) => {\n      if (oldMap[tooltipId]?.current === ref.current) {\n        return oldMap\n      }\n      // create new object to trigger re-render\n      return { ...oldMap, [tooltipId]: ref }\n    })\n  }\n\n  const getTooltipData = useCallback(\n    (tooltipId = DEFAULT_TOOLTIP_ID) => ({\n      anchorRefs: anchorRefMap[tooltipId] ?? new Set(),\n      activeAnchor: activeAnchorMap[tooltipId] ?? { current: null },\n      attach: (...refs: AnchorRef[]) => attach(tooltipId, ...refs),\n      detach: (...refs: AnchorRef[]) => detach(tooltipId, ...refs),\n      setActiveAnchor: (ref: AnchorRef) => setActiveAnchor(tooltipId, ref),\n    }),\n    [anchorRefMap, activeAnchorMap, attach, detach],\n  )\n\n  const context = useMemo(() => {\n    return {\n      getTooltipData,\n    }\n  }, [getTooltipData])\n\n  return <TooltipContext.Provider value={context}>{children}</TooltipContext.Provider>\n}\n\nexport function useTooltip(tooltipId = DEFAULT_TOOLTIP_ID) {\n  return useContext(TooltipContext).getTooltipData(tooltipId)\n}\n\nexport default TooltipProvider\n", "import React, { useEffect, useRef } from 'react'\nimport classNames from 'classnames'\nimport { useTooltip } from './TooltipProvider'\nimport type { ITooltipWrapper } from './TooltipProviderTypes'\n\n/**\n * @deprecated Use the `data-tooltip-id` attribute, or the `anchorSelect` prop instead.\n * See https://react-tooltip.com/docs/getting-started\n */\nconst TooltipWrapper = ({\n  tooltipId,\n  children,\n  className,\n  place,\n  content,\n  html,\n  variant,\n  offset,\n  wrapper,\n  events,\n  positionStrategy,\n  delayShow,\n  delayHide,\n}: ITooltipWrapper) => {\n  const { attach, detach } = useTooltip(tooltipId)\n  const anchorRef = useRef<HTMLElement | null>(null)\n\n  useEffect(() => {\n    attach(anchorRef)\n    return () => {\n      detach(anchorRef)\n    }\n  }, [])\n\n  return (\n    <span\n      ref={anchorRef}\n      className={classNames('react-tooltip-wrapper', className)}\n      data-tooltip-place={place}\n      data-tooltip-content={content}\n      data-tooltip-html={html}\n      data-tooltip-variant={variant}\n      data-tooltip-offset={offset}\n      data-tooltip-wrapper={wrapper}\n      data-tooltip-events={events}\n      data-tooltip-position-strategy={positionStrategy}\n      data-tooltip-delay-show={delayShow}\n      data-tooltip-delay-hide={delayHide}\n    >\n      {children}\n    </span>\n  )\n}\n\nexport default TooltipWrapper\n", "import { useLayoutEffect, useEffect } from 'react'\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect\n\nexport default useIsomorphicLayoutEffect\n", "import { computePosition, offset, shift, arrow, flip } from '@floating-ui/dom'\nimport type { IComputePositions } from './compute-positions-types'\n\nexport const computeTooltipPosition = async ({\n  elementReference = null,\n  tooltipReference = null,\n  tooltipArrowReference = null,\n  place = 'top',\n  offset: offsetValue = 10,\n  strategy = 'absolute',\n  middlewares = [offset(Number(offsetValue)), flip(), shift({ padding: 5 })],\n}: IComputePositions) => {\n  if (!elementReference) {\n    // elementReference can be null or undefined and we will not compute the position\n    // eslint-disable-next-line no-console\n    // console.error('The reference element for tooltip was not defined: ', elementReference)\n    return { tooltipStyles: {}, tooltipArrowStyles: {}, place }\n  }\n\n  if (tooltipReference === null) {\n    return { tooltipStyles: {}, tooltipArrowStyles: {}, place }\n  }\n\n  const middleware = middlewares\n\n  if (tooltipArrowReference) {\n    middleware.push(arrow({ element: tooltipArrowReference as HTMLElement, padding: 5 }))\n\n    return computePosition(elementReference as HTMLElement, tooltipReference as HTMLElement, {\n      placement: place,\n      strategy,\n      middleware,\n    }).then(({ x, y, placement, middlewareData }) => {\n      const styles = { left: `${x}px`, top: `${y}px` }\n\n      const { x: arrowX, y: arrowY } = middlewareData.arrow ?? { x: 0, y: 0 }\n\n      const staticSide =\n        {\n          top: 'bottom',\n          right: 'left',\n          bottom: 'top',\n          left: 'right',\n        }[placement.split('-')[0]] ?? 'bottom'\n\n      const arrowStyle = {\n        left: arrowX != null ? `${arrowX}px` : '',\n        top: arrowY != null ? `${arrowY}px` : '',\n        right: '',\n        bottom: '',\n        [staticSide]: '-4px',\n      }\n\n      return { tooltipStyles: styles, tooltipArrowStyles: arrowStyle, place: placement }\n    })\n  }\n\n  return computePosition(elementReference as HTMLElement, tooltipReference as HTMLElement, {\n    placement: 'bottom',\n    strategy,\n    middleware,\n  }).then(({ x, y, placement }) => {\n    const styles = { left: `${x}px`, top: `${y}px` }\n\n    return { tooltipStyles: styles, tooltipArrowStyles: {}, place: placement }\n  })\n}\n", "import React, { useEffect, useState, useRef } from 'react'\nimport classNames from 'classnames'\nimport debounce from 'utils/debounce'\nimport { useTooltip } from 'components/TooltipProvider'\nimport useIsomorphicLayoutEffect from 'utils/use-isomorphic-layout-effect'\nimport { computeTooltipPosition } from '../../utils/compute-positions'\nimport styles from './styles.module.css'\nimport type { IPosition, ITooltip, PlacesType } from './TooltipTypes'\n\nconst Tooltip = ({\n  // props\n  id,\n  className,\n  classNameArrow,\n  variant = 'dark',\n  anchorId,\n  anchorSelect,\n  place = 'top',\n  offset = 10,\n  events = ['hover'],\n  openOnClick = false,\n  positionStrategy = 'absolute',\n  middlewares,\n  wrapper: WrapperElement,\n  delayShow = 0,\n  delayHide = 0,\n  float = false,\n  hidden = false,\n  noArrow = false,\n  clickable = false,\n  closeOnEsc = false,\n  style: externalStyles,\n  position,\n  afterShow,\n  afterHide,\n  // props handled by controller\n  content,\n  contentWrapperRef,\n  isOpen,\n  setIsOpen,\n  activeAnchor,\n  setActiveAnchor,\n}: ITooltip) => {\n  const tooltipRef = useRef<HTMLElement>(null)\n  const tooltipArrowRef = useRef<HTMLElement>(null)\n  const tooltipShowDelayTimerRef = useRef<NodeJS.Timeout | null>(null)\n  const tooltipHideDelayTimerRef = useRef<NodeJS.Timeout | null>(null)\n  const [actualPlacement, setActualPlacement] = useState(place)\n  const [inlineStyles, setInlineStyles] = useState({})\n  const [inlineArrowStyles, setInlineArrowStyles] = useState({})\n  const [show, setShow] = useState(false)\n  const [rendered, setRendered] = useState(false)\n  const wasShowing = useRef(false)\n  const lastFloatPosition = useRef<IPosition | null>(null)\n  /**\n   * @todo Remove this in a future version (provider/wrapper method is deprecated)\n   */\n  const { anchorRefs, setActiveAnchor: setProviderActiveAnchor } = useTooltip(id)\n  const hoveringTooltip = useRef(false)\n  const [anchorsBySelect, setAnchorsBySelect] = useState<HTMLElement[]>([])\n  const mounted = useRef(false)\n\n  const shouldOpenOnClick = openOnClick || events.includes('click')\n\n  /**\n   * useLayoutEffect runs before useEffect,\n   * but should be used carefully because of caveats\n   * https://beta.reactjs.org/reference/react/useLayoutEffect#caveats\n   */\n  useIsomorphicLayoutEffect(() => {\n    mounted.current = true\n    return () => {\n      mounted.current = false\n    }\n  }, [])\n\n  useEffect(() => {\n    if (!show) {\n      /**\n       * this fixes weird behavior when switching between two anchor elements very quickly\n       * remove the timeout and switch quickly between two adjancent anchor elements to see it\n       *\n       * in practice, this means the tooltip is not immediately removed from the DOM on hide\n       */\n      const timeout = setTimeout(() => {\n        setRendered(false)\n      }, 150)\n      return () => {\n        clearTimeout(timeout)\n      }\n    }\n    return () => null\n  }, [show])\n\n  const handleShow = (value: boolean) => {\n    if (!mounted.current) {\n      return\n    }\n    if (value) {\n      setRendered(true)\n    }\n    /**\n     * wait for the component to render and calculate position\n     * before actually showing\n     */\n    setTimeout(() => {\n      if (!mounted.current) {\n        return\n      }\n      setIsOpen?.(value)\n      if (isOpen === undefined) {\n        setShow(value)\n      }\n    }, 10)\n  }\n\n  /**\n   * this replicates the effect from `handleShow()`\n   * when `isOpen` is changed from outside\n   */\n  useEffect(() => {\n    if (isOpen === undefined) {\n      return () => null\n    }\n    if (isOpen) {\n      setRendered(true)\n    }\n    const timeout = setTimeout(() => {\n      setShow(isOpen)\n    }, 10)\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [isOpen])\n\n  useEffect(() => {\n    if (show === wasShowing.current) {\n      return\n    }\n    wasShowing.current = show\n    if (show) {\n      afterShow?.()\n    } else {\n      afterHide?.()\n    }\n  }, [show])\n\n  const handleShowTooltipDelayed = () => {\n    if (tooltipShowDelayTimerRef.current) {\n      clearTimeout(tooltipShowDelayTimerRef.current)\n    }\n\n    tooltipShowDelayTimerRef.current = setTimeout(() => {\n      handleShow(true)\n    }, delayShow)\n  }\n\n  const handleHideTooltipDelayed = (delay = delayHide) => {\n    if (tooltipHideDelayTimerRef.current) {\n      clearTimeout(tooltipHideDelayTimerRef.current)\n    }\n\n    tooltipHideDelayTimerRef.current = setTimeout(() => {\n      if (hoveringTooltip.current) {\n        return\n      }\n      handleShow(false)\n    }, delay)\n  }\n\n  const handleShowTooltip = (event?: Event) => {\n    if (!event) {\n      return\n    }\n    const target = (event.currentTarget ?? event.target) as HTMLElement | null\n    if (!target?.isConnected) {\n      /**\n       * this happens when the target is removed from the DOM\n       * at the same time the tooltip gets triggered\n       */\n      setActiveAnchor(null)\n      setProviderActiveAnchor({ current: null })\n      return\n    }\n    if (delayShow) {\n      handleShowTooltipDelayed()\n    } else {\n      handleShow(true)\n    }\n    setActiveAnchor(target)\n    setProviderActiveAnchor({ current: target })\n\n    if (tooltipHideDelayTimerRef.current) {\n      clearTimeout(tooltipHideDelayTimerRef.current)\n    }\n  }\n\n  const handleHideTooltip = () => {\n    if (clickable) {\n      // allow time for the mouse to reach the tooltip, in case there's a gap\n      handleHideTooltipDelayed(delayHide || 100)\n    } else if (delayHide) {\n      handleHideTooltipDelayed()\n    } else {\n      handleShow(false)\n    }\n\n    if (tooltipShowDelayTimerRef.current) {\n      clearTimeout(tooltipShowDelayTimerRef.current)\n    }\n  }\n\n  const handleTooltipPosition = ({ x, y }: IPosition) => {\n    const virtualElement = {\n      getBoundingClientRect() {\n        return {\n          x,\n          y,\n          width: 0,\n          height: 0,\n          top: y,\n          left: x,\n          right: x,\n          bottom: y,\n        }\n      },\n    } as Element\n    computeTooltipPosition({\n      place,\n      offset,\n      elementReference: virtualElement,\n      tooltipReference: tooltipRef.current,\n      tooltipArrowReference: tooltipArrowRef.current,\n      strategy: positionStrategy,\n      middlewares,\n    }).then((computedStylesData) => {\n      if (Object.keys(computedStylesData.tooltipStyles).length) {\n        setInlineStyles(computedStylesData.tooltipStyles)\n      }\n      if (Object.keys(computedStylesData.tooltipArrowStyles).length) {\n        setInlineArrowStyles(computedStylesData.tooltipArrowStyles)\n      }\n      setActualPlacement(computedStylesData.place as PlacesType)\n    })\n  }\n\n  const handleMouseMove = (event?: Event) => {\n    if (!event) {\n      return\n    }\n    const mouseEvent = event as MouseEvent\n    const mousePosition = {\n      x: mouseEvent.clientX,\n      y: mouseEvent.clientY,\n    }\n    handleTooltipPosition(mousePosition)\n    lastFloatPosition.current = mousePosition\n  }\n\n  const handleClickTooltipAnchor = (event?: Event) => {\n    handleShowTooltip(event)\n    if (delayHide) {\n      handleHideTooltipDelayed()\n    }\n  }\n\n  const handleClickOutsideAnchors = (event: MouseEvent) => {\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    const anchors = [anchorById, ...anchorsBySelect]\n    if (anchors.some((anchor) => anchor?.contains(event.target as HTMLElement))) {\n      return\n    }\n    if (tooltipRef.current?.contains(event.target as HTMLElement)) {\n      return\n    }\n    handleShow(false)\n  }\n\n  const handleEsc = (event: KeyboardEvent) => {\n    if (event.key !== 'Escape') {\n      return\n    }\n    handleShow(false)\n  }\n\n  // debounce handler to prevent call twice when\n  // mouse enter and focus events being triggered toggether\n  const debouncedHandleShowTooltip = debounce(handleShowTooltip, 50, true)\n  const debouncedHandleHideTooltip = debounce(handleHideTooltip, 50, true)\n\n  useEffect(() => {\n    const elementRefs = new Set(anchorRefs)\n\n    anchorsBySelect.forEach((anchor) => {\n      elementRefs.add({ current: anchor })\n    })\n\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    if (anchorById) {\n      elementRefs.add({ current: anchorById })\n    }\n\n    if (closeOnEsc) {\n      window.addEventListener('keydown', handleEsc)\n    }\n\n    const enabledEvents: { event: string; listener: (event?: Event) => void }[] = []\n\n    if (shouldOpenOnClick) {\n      window.addEventListener('click', handleClickOutsideAnchors)\n      enabledEvents.push({ event: 'click', listener: handleClickTooltipAnchor })\n    } else {\n      enabledEvents.push(\n        { event: 'mouseenter', listener: debouncedHandleShowTooltip },\n        { event: 'mouseleave', listener: debouncedHandleHideTooltip },\n        { event: 'focus', listener: debouncedHandleShowTooltip },\n        { event: 'blur', listener: debouncedHandleHideTooltip },\n      )\n      if (float) {\n        enabledEvents.push({\n          event: 'mousemove',\n          listener: handleMouseMove,\n        })\n      }\n    }\n\n    const handleMouseEnterTooltip = () => {\n      hoveringTooltip.current = true\n    }\n    const handleMouseLeaveTooltip = () => {\n      hoveringTooltip.current = false\n      handleHideTooltip()\n    }\n\n    if (clickable && !shouldOpenOnClick) {\n      tooltipRef.current?.addEventListener('mouseenter', handleMouseEnterTooltip)\n      tooltipRef.current?.addEventListener('mouseleave', handleMouseLeaveTooltip)\n    }\n\n    enabledEvents.forEach(({ event, listener }) => {\n      elementRefs.forEach((ref) => {\n        ref.current?.addEventListener(event, listener)\n      })\n    })\n\n    return () => {\n      if (shouldOpenOnClick) {\n        window.removeEventListener('click', handleClickOutsideAnchors)\n      }\n      if (closeOnEsc) {\n        window.removeEventListener('keydown', handleEsc)\n      }\n      if (clickable && !shouldOpenOnClick) {\n        tooltipRef.current?.removeEventListener('mouseenter', handleMouseEnterTooltip)\n        tooltipRef.current?.removeEventListener('mouseleave', handleMouseLeaveTooltip)\n      }\n      enabledEvents.forEach(({ event, listener }) => {\n        elementRefs.forEach((ref) => {\n          ref.current?.removeEventListener(event, listener)\n        })\n      })\n    }\n    /**\n     * rendered is also a dependency to ensure anchor observers are re-registered\n     * since `tooltipRef` becomes stale after removing/adding the tooltip to the DOM\n     */\n  }, [rendered, anchorRefs, anchorsBySelect, closeOnEsc, events])\n\n  useEffect(() => {\n    let selector = anchorSelect ?? ''\n    if (!selector && id) {\n      selector = `[data-tooltip-id='${id}']`\n    }\n    const documentObserverCallback: MutationCallback = (mutationList) => {\n      const newAnchors: HTMLElement[] = []\n      mutationList.forEach((mutation) => {\n        if (mutation.type === 'attributes' && mutation.attributeName === 'data-tooltip-id') {\n          const newId = (mutation.target as HTMLElement).getAttribute('data-tooltip-id')\n          if (newId === id) {\n            newAnchors.push(mutation.target as HTMLElement)\n          }\n        }\n        if (mutation.type !== 'childList') {\n          return\n        }\n        if (activeAnchor) {\n          ;[...mutation.removedNodes].some((node) => {\n            if (node?.contains?.(activeAnchor)) {\n              setRendered(false)\n              handleShow(false)\n              setActiveAnchor(null)\n              return true\n            }\n            return false\n          })\n        }\n        if (!selector) {\n          return\n        }\n        try {\n          const elements = [...mutation.addedNodes].filter((node) => node.nodeType === 1)\n          newAnchors.push(\n            // the element itself is an anchor\n            ...(elements.filter((element) =>\n              (element as HTMLElement).matches(selector),\n            ) as HTMLElement[]),\n          )\n          newAnchors.push(\n            // the element has children which are anchors\n            ...elements.flatMap(\n              (element) =>\n                [...(element as HTMLElement).querySelectorAll(selector)] as HTMLElement[],\n            ),\n          )\n        } catch {\n          /**\n           * invalid CSS selector.\n           * already warned on tooltip controller\n           */\n        }\n      })\n      if (newAnchors.length) {\n        setAnchorsBySelect((anchors) => [...anchors, ...newAnchors])\n      }\n    }\n    const documentObserver = new MutationObserver(documentObserverCallback)\n    // watch for anchor being removed from the DOM\n    documentObserver.observe(document.body, {\n      childList: true,\n      subtree: true,\n      attributes: true,\n      attributeFilter: ['data-tooltip-id'],\n    })\n    return () => {\n      documentObserver.disconnect()\n    }\n  }, [id, anchorSelect, activeAnchor])\n\n  const updateTooltipPosition = () => {\n    if (position) {\n      // if `position` is set, override regular and `float` positioning\n      handleTooltipPosition(position)\n      return\n    }\n\n    if (float) {\n      if (lastFloatPosition.current) {\n        /*\n          Without this, changes to `content`, `place`, `offset`, ..., will only\n          trigger a position calculation after a `mousemove` event.\n\n          To see why this matters, comment this line, run `yarn dev` and click the\n          \"Hover me!\" anchor.\n        */\n        handleTooltipPosition(lastFloatPosition.current)\n      }\n      // if `float` is set, override regular positioning\n      return\n    }\n\n    computeTooltipPosition({\n      place,\n      offset,\n      elementReference: activeAnchor,\n      tooltipReference: tooltipRef.current,\n      tooltipArrowReference: tooltipArrowRef.current,\n      strategy: positionStrategy,\n      middlewares,\n    }).then((computedStylesData) => {\n      if (!mounted.current) {\n        // invalidate computed positions after remount\n        return\n      }\n      if (Object.keys(computedStylesData.tooltipStyles).length) {\n        setInlineStyles(computedStylesData.tooltipStyles)\n      }\n      if (Object.keys(computedStylesData.tooltipArrowStyles).length) {\n        setInlineArrowStyles(computedStylesData.tooltipArrowStyles)\n      }\n      setActualPlacement(computedStylesData.place as PlacesType)\n    })\n  }\n\n  useEffect(() => {\n    updateTooltipPosition()\n  }, [show, activeAnchor, content, externalStyles, place, offset, positionStrategy, position])\n\n  useEffect(() => {\n    if (!contentWrapperRef?.current) {\n      return () => null\n    }\n    const contentObserver = new ResizeObserver(() => {\n      updateTooltipPosition()\n    })\n    contentObserver.observe(contentWrapperRef.current)\n    return () => {\n      contentObserver.disconnect()\n    }\n  }, [content, contentWrapperRef?.current])\n\n  useEffect(() => {\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    const anchors = [...anchorsBySelect, anchorById]\n    if (!activeAnchor || !anchors.includes(activeAnchor)) {\n      /**\n       * if there is no active anchor,\n       * or if the current active anchor is not amongst the allowed ones,\n       * reset it\n       */\n      setActiveAnchor(anchorsBySelect[0] ?? anchorById)\n    }\n  }, [anchorId, anchorsBySelect, activeAnchor])\n\n  useEffect(() => {\n    return () => {\n      if (tooltipShowDelayTimerRef.current) {\n        clearTimeout(tooltipShowDelayTimerRef.current)\n      }\n      if (tooltipHideDelayTimerRef.current) {\n        clearTimeout(tooltipHideDelayTimerRef.current)\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    let selector = anchorSelect\n    if (!selector && id) {\n      selector = `[data-tooltip-id='${id}']`\n    }\n    if (!selector) {\n      return\n    }\n    try {\n      const anchors = Array.from(document.querySelectorAll<HTMLElement>(selector))\n      setAnchorsBySelect(anchors)\n    } catch {\n      // warning was already issued in the controller\n      setAnchorsBySelect([])\n    }\n  }, [id, anchorSelect])\n\n  const canShow = !hidden && content && show && Object.keys(inlineStyles).length > 0\n\n  return rendered ? (\n    <WrapperElement\n      id={id}\n      role=\"tooltip\"\n      className={classNames(\n        'react-tooltip',\n        styles['tooltip'],\n        styles[variant],\n        className,\n        `react-tooltip__place-${actualPlacement}`,\n        {\n          [styles['show']]: canShow,\n          [styles['fixed']]: positionStrategy === 'fixed',\n          [styles['clickable']]: clickable,\n        },\n      )}\n      style={{ ...externalStyles, ...inlineStyles }}\n      ref={tooltipRef}\n    >\n      {content}\n      <WrapperElement\n        className={classNames('react-tooltip-arrow', styles['arrow'], classNameArrow, {\n          /**\n           * changed from dash `no-arrow` to camelcase because of:\n           * https://github.com/indooorsman/esbuild-css-modules-plugin/issues/42\n           */\n          [styles['noArrow']]: noArrow,\n        })}\n        style={inlineArrowStyles}\n        ref={tooltipArrowRef}\n      />\n    </WrapperElement>\n  ) : null\n}\n\nexport default Tooltip\n", "/* eslint-disable react/no-danger */\nimport React from 'react'\nimport type { ITooltipContent } from './TooltipContentTypes'\n\nconst TooltipContent = ({ content }: ITooltipContent) => {\n  return <span dangerouslySetInnerHTML={{ __html: content }} />\n}\n\nexport default TooltipContent\n", "import React, { useEffect, useRef, useState } from 'react'\nimport { Tooltip } from 'components/Tooltip'\nimport type {\n  EventsType,\n  PositionStrategy,\n  PlacesType,\n  VariantType,\n  WrapperType,\n  DataAttribute,\n  ITooltip,\n  ChildrenType,\n} from 'components/Tooltip/TooltipTypes'\nimport { useTooltip } from 'components/TooltipProvider'\nimport { TooltipContent } from 'components/TooltipContent'\nimport type { ITooltipController } from './TooltipControllerTypes'\n\nconst TooltipController = ({\n  id,\n  anchorId,\n  anchorSelect,\n  content,\n  html,\n  render,\n  className,\n  classNameArrow,\n  variant = 'dark',\n  place = 'top',\n  offset = 10,\n  wrapper = 'div',\n  children = null,\n  events = ['hover'],\n  openOnClick = false,\n  positionStrategy = 'absolute',\n  middlewares,\n  delayShow = 0,\n  delayHide = 0,\n  float = false,\n  hidden = false,\n  noArrow = false,\n  clickable = false,\n  closeOnEsc = false,\n  style,\n  position,\n  isOpen,\n  setIsOpen,\n  afterShow,\n  afterHide,\n}: ITooltipController) => {\n  const [tooltipContent, setTooltipContent] = useState(content)\n  const [tooltipHtml, setTooltipHtml] = useState(html)\n  const [tooltipPlace, setTooltipPlace] = useState(place)\n  const [tooltipVariant, setTooltipVariant] = useState(variant)\n  const [tooltipOffset, setTooltipOffset] = useState(offset)\n  const [tooltipDelayShow, setTooltipDelayShow] = useState(delayShow)\n  const [tooltipDelayHide, setTooltipDelayHide] = useState(delayHide)\n  const [tooltipFloat, setTooltipFloat] = useState(float)\n  const [tooltipHidden, setTooltipHidden] = useState(hidden)\n  const [tooltipWrapper, setTooltipWrapper] = useState<WrapperType>(wrapper)\n  const [tooltipEvents, setTooltipEvents] = useState(events)\n  const [tooltipPositionStrategy, setTooltipPositionStrategy] = useState(positionStrategy)\n  const [activeAnchor, setActiveAnchor] = useState<HTMLElement | null>(null)\n  /**\n   * @todo Remove this in a future version (provider/wrapper method is deprecated)\n   */\n  const { anchorRefs, activeAnchor: providerActiveAnchor } = useTooltip(id)\n\n  const getDataAttributesFromAnchorElement = (elementReference: HTMLElement) => {\n    const dataAttributes = elementReference?.getAttributeNames().reduce((acc, name) => {\n      if (name.startsWith('data-tooltip-')) {\n        const parsedAttribute = name.replace(/^data-tooltip-/, '') as DataAttribute\n        acc[parsedAttribute] = elementReference?.getAttribute(name) ?? null\n      }\n      return acc\n    }, {} as Record<DataAttribute, string | null>)\n\n    return dataAttributes\n  }\n\n  const applyAllDataAttributesFromAnchorElement = (\n    dataAttributes: Record<string, string | null>,\n  ) => {\n    const handleDataAttributes: Record<DataAttribute, (value: string | null) => void> = {\n      place: (value) => {\n        setTooltipPlace((value as PlacesType) ?? place)\n      },\n      content: (value) => {\n        setTooltipContent(value ?? content)\n      },\n      html: (value) => {\n        setTooltipHtml(value ?? html)\n      },\n      variant: (value) => {\n        setTooltipVariant((value as VariantType) ?? variant)\n      },\n      offset: (value) => {\n        setTooltipOffset(value === null ? offset : Number(value))\n      },\n      wrapper: (value) => {\n        setTooltipWrapper((value as WrapperType) ?? wrapper)\n      },\n      events: (value) => {\n        const parsed = value?.split(' ') as EventsType[]\n        setTooltipEvents(parsed ?? events)\n      },\n      'position-strategy': (value) => {\n        setTooltipPositionStrategy((value as PositionStrategy) ?? positionStrategy)\n      },\n      'delay-show': (value) => {\n        setTooltipDelayShow(value === null ? delayShow : Number(value))\n      },\n      'delay-hide': (value) => {\n        setTooltipDelayHide(value === null ? delayHide : Number(value))\n      },\n      float: (value) => {\n        setTooltipFloat(value === null ? float : value === 'true')\n      },\n      hidden: (value) => {\n        setTooltipHidden(value === null ? hidden : value === 'true')\n      },\n    }\n    // reset unset data attributes to default values\n    // without this, data attributes from the last active anchor will still be used\n    Object.values(handleDataAttributes).forEach((handler) => handler(null))\n    Object.entries(dataAttributes).forEach(([key, value]) => {\n      handleDataAttributes[key as DataAttribute]?.(value)\n    })\n  }\n\n  useEffect(() => {\n    setTooltipContent(content)\n  }, [content])\n\n  useEffect(() => {\n    setTooltipHtml(html)\n  }, [html])\n\n  useEffect(() => {\n    setTooltipPlace(place)\n  }, [place])\n\n  useEffect(() => {\n    setTooltipVariant(variant)\n  }, [variant])\n\n  useEffect(() => {\n    setTooltipOffset(offset)\n  }, [offset])\n\n  useEffect(() => {\n    setTooltipDelayShow(delayShow)\n  }, [delayShow])\n\n  useEffect(() => {\n    setTooltipDelayHide(delayHide)\n  }, [delayHide])\n\n  useEffect(() => {\n    setTooltipFloat(float)\n  }, [float])\n\n  useEffect(() => {\n    setTooltipHidden(hidden)\n  }, [hidden])\n\n  useEffect(() => {\n    setTooltipPositionStrategy(positionStrategy)\n  }, [positionStrategy])\n\n  useEffect(() => {\n    const elementRefs = new Set(anchorRefs)\n\n    let selector = anchorSelect\n    if (!selector && id) {\n      selector = `[data-tooltip-id='${id}']`\n    }\n    if (selector) {\n      try {\n        const anchorsBySelect = document.querySelectorAll<HTMLElement>(selector)\n        anchorsBySelect.forEach((anchor) => {\n          elementRefs.add({ current: anchor })\n        })\n      } catch {\n        if (!process.env.NODE_ENV || process.env.NODE_ENV !== 'production') {\n          // eslint-disable-next-line no-console\n          console.warn(`[react-tooltip] \"${selector}\" is not a valid CSS selector`)\n        }\n      }\n    }\n\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    if (anchorById) {\n      elementRefs.add({ current: anchorById })\n    }\n\n    if (!elementRefs.size) {\n      return () => null\n    }\n\n    const anchorElement = activeAnchor ?? anchorById ?? providerActiveAnchor.current\n\n    const observerCallback: MutationCallback = (mutationList) => {\n      mutationList.forEach((mutation) => {\n        if (\n          !anchorElement ||\n          mutation.type !== 'attributes' ||\n          !mutation.attributeName?.startsWith('data-tooltip-')\n        ) {\n          return\n        }\n        // make sure to get all set attributes, since all unset attributes are reset\n        const dataAttributes = getDataAttributesFromAnchorElement(anchorElement)\n        applyAllDataAttributesFromAnchorElement(dataAttributes)\n      })\n    }\n\n    // Create an observer instance linked to the callback function\n    const observer = new MutationObserver(observerCallback)\n\n    // do not check for subtree and childrens, we only want to know attribute changes\n    // to stay watching `data-attributes-*` from anchor element\n    const observerConfig = { attributes: true, childList: false, subtree: false }\n\n    if (anchorElement) {\n      const dataAttributes = getDataAttributesFromAnchorElement(anchorElement)\n      applyAllDataAttributesFromAnchorElement(dataAttributes)\n      // Start observing the target node for configured mutations\n      observer.observe(anchorElement, observerConfig)\n    }\n\n    return () => {\n      // Remove the observer when the tooltip is destroyed\n      observer.disconnect()\n    }\n  }, [anchorRefs, providerActiveAnchor, activeAnchor, anchorId, anchorSelect])\n\n  /**\n   * content priority: children < render or content < html\n   * children should be lower priority so that it can be used as the \"default\" content\n   */\n  let renderedContent: ChildrenType = children\n  const contentWrapperRef = useRef<HTMLDivElement>(null)\n  if (render) {\n    const rendered = render({ content: tooltipContent ?? null, activeAnchor }) as React.ReactNode\n    renderedContent = rendered ? (\n      <div ref={contentWrapperRef} className=\"react-tooltip-content-wrapper\">\n        {rendered}\n      </div>\n    ) : null\n  } else if (tooltipContent) {\n    renderedContent = tooltipContent\n  }\n  if (tooltipHtml) {\n    renderedContent = <TooltipContent content={tooltipHtml} />\n  }\n\n  const props: ITooltip = {\n    id,\n    anchorId,\n    anchorSelect,\n    className,\n    classNameArrow,\n    content: renderedContent,\n    contentWrapperRef,\n    place: tooltipPlace,\n    variant: tooltipVariant,\n    offset: tooltipOffset,\n    wrapper: tooltipWrapper,\n    events: tooltipEvents,\n    openOnClick,\n    positionStrategy: tooltipPositionStrategy,\n    middlewares,\n    delayShow: tooltipDelayShow,\n    delayHide: tooltipDelayHide,\n    float: tooltipFloat,\n    hidden: tooltipHidden,\n    noArrow,\n    clickable,\n    closeOnEsc,\n    style,\n    position,\n    isOpen,\n    setIsOpen,\n    afterShow,\n    afterHide,\n    activeAnchor,\n    setActiveAnchor: (anchor: HTMLElement | null) => setActiveAnchor(anchor),\n  }\n\n  return <Tooltip {...props} />\n}\n\nexport default TooltipController\n"],
  "mappings": "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",
  "names": ["i", "styleInject", "css", "ref", "insertAt", "document", "head", "getElementsByTagName", "style", "createElement", "type", "firstChild", "insertBefore", "appendChild", "styleSheet", "cssText", "createTextNode", "debounce", "func", "wait", "immediate", "timeout", "args", "later", "apply", "this", "setTimeout", "clearTimeout", "DEFAULT_TOOLTIP_ID", "DEFAULT_CONTEXT_DATA", "anchorRefs", "Set", "activeAnchor", "current", "attach", "detach", "setActiveAnchor", "TooltipContext", "createContext", "getTooltipData", "TooltipProvider", "children", "anchorRefMap", "setAnchorRefMap", "useState", "activeAnchorMap", "setActiveAnchorMap", "tooltipId", "refs", "oldMap", "tooltipRefs", "_a", "forEach", "add", "delete", "useCallback", "t", "_b", "context", "useMemo", "React", "Provider", "value", "useTooltip", "useContext", "TooltipWrapper", "className", "place", "content", "html", "variant", "offset", "wrapper", "events", "positionStrategy", "delayShow", "delayHide", "anchorRef", "useRef", "useEffect", "classNames", "useIsomorphicLayoutEffect", "window", "useLayoutEffect", "computeTooltipPosition", "async", "elementReference", "tooltipReference", "tooltipArrowReference", "offsetValue", "strategy", "middlewares", "Number", "flip", "shift", "padding", "tooltipStyles", "tooltipArrowStyles", "middleware", "push", "arrow", "element", "computePosition", "placement", "then", "x", "y", "middlewareData", "styles", "left", "top", "arrowX", "arrowY", "right", "bottom", "split", "Tooltip", "id", "classNameArrow", "anchorId", "anchorSelect", "openOnClick", "WrapperElement", "float", "hidden", "noArrow", "clickable", "closeOnEsc", "externalStyles", "position", "afterShow", "afterHide", "contentWrapperRef", "isOpen", "setIsOpen", "tooltipRef", "tooltipArrowRef", "tooltipShowDelayTimerRef", "tooltipHideDelayTimerRef", "actualPlacement", "setActualPlacement", "inlineStyles", "setInlineStyles", "inlineArrowStyles", "setInlineArrowStyles", "show", "setShow", "rendered", "setRendered", "wasShowing", "lastFloatPosition", "setProviderActiveAnchor", "hoveringTooltip", "anchorsBySelect", "setAnchorsBySelect", "mounted", "shouldOpenOnClick", "includes", "handleShow", "handleHideTooltipDelayed", "delay", "handleShowTooltip", "event", "target", "currentTarget", "isConnected", "handleHideTooltip", "handleTooltipPosition", "getBoundingClientRect", "width", "height", "computedStylesData", "Object", "keys", "length", "handleMouseMove", "mouseEvent", "mousePosition", "clientX", "clientY", "handleClickTooltipAnchor", "handleClickOutsideAnchors", "querySelector", "some", "anchor", "contains", "handleEsc", "key", "debouncedHandleShowTooltip", "debouncedHandleHideTooltip", "e", "elementRefs", "anchorById", "addEventListener", "enabledEvents", "listener", "handleMouseEnterTooltip", "handleMouseLeaveTooltip", "removeEventListener", "selector", "documentObserver", "MutationObserver", "mutationList", "newAnchors", "mutation", "attributeName", "getAttribute", "removedNodes", "node", "call", "elements", "addedNodes", "filter", "nodeType", "matches", "flatMap", "querySelectorAll", "anchors", "observe", "body", "childList", "subtree", "attributes", "attributeFilter", "disconnect", "updateTooltipPosition", "contentObserver", "ResizeObserver", "Array", "from", "canShow", "role", "TooltipContent", "dangerouslySetInnerHTML", "__html", "TooltipController", "render", "tooltipContent", "setTooltipContent", "tooltipHtml", "setTooltipHtml", "tooltipPlace", "setTooltipPlace", "tooltipVariant", "setTooltipVariant", "tooltipOffset", "setTooltipOffset", "tooltipDelayShow", "setTooltipDelayShow", "tooltipDelayHide", "setTooltipDelayHide", "tooltipFloat", "setTooltipFloat", "tooltipHidden", "setTooltipHidden", "tooltipWrapper", "setTooltipWrapper", "tooltipEvents", "setTooltipEvents", "tooltipPositionStrategy", "setTooltipPositionStrategy", "providerActiveAnchor", "getDataAttributesFromAnchorElement", "getAttributeNames", "reduce", "acc", "name", "startsWith", "replace", "applyAllDataAttributesFromAnchorElement", "dataAttributes", "handleDataAttributes", "parsed", "values", "handler", "entries", "console", "warn", "size", "anchorElement", "observer", "observerConfig", "renderedContent", "props"]
}
